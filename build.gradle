plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.4"
    id("io.micronaut.aot") version "4.3.4"
}

version = "0.3"
group = "com.imgidea.micronaut_java"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
    runtimeOnly("org.yaml:snakeyaml")

    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    //implementation("io.micronaut:micronaut-validation")

    // Swagger
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5:3.8.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:{junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:{junitVersion}")

    //compile 'org.neo4j.driver:neo4j-java-driver:5.10.0'
    //implementation "io.micronaut.configuration:micronaut-neo4j-bolt"
    implementation("org.neo4j.driver:neo4j-java-driver:5.10.0")


    //implementation("io.micronaut:micronaut-neo4j-bolt")



    //testRuntime "org.neo4j.test:neo4j-harness"

    implementation("mysql:mysql-connector-java:8.0.16")

    runtimeOnly("ch.qos.logback:logback-classic")
}

application {
    mainClass.set("com.imgidea.micronaut_java.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.imgidea.micronaut_java.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

test {
    useJUnitPlatform()
}
